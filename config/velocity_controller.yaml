## ----------------------------------------------------------------------------------------
nominal_control_enabled: True # default:True
obstacle_avoidance_enabled: True # default:True 
stress_avoidance_enabled: True # default:True 

# if the control output is invalid for this time, the controller stops.
# If set to less than or equal to zero, the controller does not stop.
valid_control_output_wait_timeout: 5.0 # (seconds) 
## ----------------------------------------------------------------------------------------

## ----------------------------------------------------------------------------------------
## Nominal Velocity controller parameters

# Nominal Controller Gains [x,y,z, Rx,Ry,Rz]
# kp: [0.05,0.05,0.025, 0.15,0.15,0.15]
# kp: [1.0,1.0,1.0, 1.5,1.5,1.5]
kp: [0.5,0.5,0.5, 0.75,0.75,0.75]
# kp: [0.03,0.03,0.03, 0.05,0.05,0.05]
# kp: [0.02,0.02,0.02, 0.1,0.1,0.1]
# kp: [0.06,0.06,0.03, 0.03,0.03,0.03]

kd: [0.0,0.0,0.0, 0.0,0.0,0.0]

# Particle/Segment ids of the tip points of the tent pole 
# to be placed into the grommets
tip_particles: [0,39]

# Grommet poses as targets for the tip points
## ----------------------------------------------------------------------------------------
# Each element holds [[x,y,z],[Rx,Ry,Rz(euler angles in degrees)]]
## ---------------------------------------------
# # For TENT BUILDING
# target_poses: [[[-1, -1, 0.14], [5,   0, 90]],
#                [[ 1, -1, 0.14], [175, 0, 90]]]
## ---------------------------------------------

## ---------------------------------------------
# # For TEST
# target_poses: [[[-1.215,  2.00, 0.5], [90, 0, 0]],
#                [[-1.215, -0.43, 0.5], [90, 0, 0]]]

# # # For TEST with corridor
# target_poses: [[[2.5,  1.67601, 0.5], [90, 0, 0]],
#                [[2.5, -1.67601, 0.5], [90, 0, 0]]]
## ---------------------------------------------

## ---------------------------------------------
# Mingrui Yu's Scenes (Simulation)
# # # For Mingrui Yu Scene 1 (TASK 1)
# target_poses: [[[-0.20,  0.10, 0.25], [90, 0, 0]],
#                [[+0.00, -0.20, 0.10], [90, 0, 90]]] 

# # # For Mingrui Yu Scene 2 (TASK 2)
# target_poses: [[[-0.24,  0.08, 0.3], [90, 0, 70]],
#                [[+0.24,  0.08, 0.3], [90, 0, 110]]] 

# # # For Mingrui Yu Scene 3 (TASK 3)
# target_poses: [[[+0.00,  0.2, 0.1], [90, 0, -20]],
#                [[+0.00, -0.2, 0.1], [90, 0,  20]]] 

# # # For Mingrui Yu Scene 4 (TASK 4)
# target_poses: [[[0.2,  0.03, 0.12], [90, 0, -85]],
#                [[0.2, -0.27, 0.12], [90, 0,  85]]] 
## ---------------------------------------------

## ---------------------------------------------
# Mingrui Yu's Scenes (Real Experiments)
# # # For Mingrui Yu Scene 0 (TASK 1) - DLO 1
# target_poses: [[[-0.02,  0.15, 0.30], [90, 0, -70]],
#                [[-0.02, -0.15, 0.30], [90, 0,  70]]]

# # # For Mingrui Yu Scene 0 (TASK 1) - DLO 4
# target_poses: [[[-0.02,  0.15, 0.30], [90, 0, -70]],
#                [[-0.02, -0.15, 0.30], [90, 0,  70]]]

# # # For Mingrui Yu Scene 0 (TASK 1) - DLO 5
# target_poses: [[[-0.02,  0.15, 0.30], [90, 0, -70]],
#                [[-0.02, -0.15, 0.30], [90, 0,  70]]]


# # # For Mingrui Yu Scene 2 (TASK 2) - DLO 1
# target_poses: [[[-0.15,  0.15, 0.3], [90, 0, 20]],
#                [[+0.15,  0.15, 0.3], [90, 0, 160]]]

# # # For Mingrui Yu Scene 2 (TASK 2) - DLO 4
# target_poses: [[[-0.15,  0.08, 0.3], [90, 0, 20]],
#                [[+0.15,  0.08, 0.3], [90, 0, 160]]]

# # # For Mingrui Yu Scene 2 (TASK 2) - DLO 5
# target_poses: [[[-0.15,  0.08, 0.3], [90, 0, 20]],
#                [[+0.15,  0.08, 0.3], [90, 0, 160]]]


# # # For Mingrui Yu Scene 6 (TASK 3) - DLO 1
# target_poses: [[[+0.05,  -0.17, 0.165], [ 70, -10, -150]],
#                [[-0.05,  -0.17, 0.165], [110, -20, -30]]]

# # For Mingrui Yu Scene 6 (TASK 3) - DLO 4
target_poses: [[[+0.04,  0.219, 0.1], [90, 0, 0]],
               [[+0.04, -0.269, 0.1], [90, 0, 0]]]

# # # For Mingrui Yu Scene 6 (TASK 3) - DLO 5
# target_poses: [[[+0.04,  0.219, 0.1], [90, 0, 0]],
#                [[+0.04, -0.269, 0.1], [90, 0, 0]]]
## ---------------------------------------------

## ----------------------------------------------------------------------------------------


# Saving directory of Initial and Target states of the tent pole for the path planning
# The position and orientation of the each segment of the tent pole is saved as a state
# as a csv file in this directory
state_saving_directory: "~/catkin_ws_deformable/src/deformable_manipulations_tent_building/saved_states/"

## Initial State File for the Tent Pole
## ----------------------------------------------------------------------------------------
# The initial state file is used to load the initial poses of the tent pole
# If not specified, the initial poses are expected to manually set using the set_n_save_initial_state service
# initial_state_file: "" 

# MINGRUI YU SIMULATION SCENES STATES
# initial_state_file: "/home/burak/catkin_ws_deformable/src/deformable_manipulations_tent_building/saved_states/mingrui_yu_scene_1_initial_states.csv"
# initial_state_file: "/home/burak/catkin_ws_deformable/src/deformable_manipulations_tent_building/saved_states/mingrui_yu_scene_2_initial_states.csv"
# initial_state_file: "/home/burak/catkin_ws_deformable/src/deformable_manipulations_tent_building/saved_states/mingrui_yu_scene_3_initial_states.csv" 
# initial_state_file: "/home/burak/catkin_ws_deformable/src/deformable_manipulations_tent_building/saved_states/mingrui_yu_scene_4_initial_states.csv"

# MINGRUI YU REAL EXPERIMENT SCENES STATES
# Scene 0 (TASK 1)
# initial_state_file: "/home/burak/catkin_ws_deformable/src/deformable_manipulations_tent_building/saved_states/mingrui_yu_scene_0_dlo_1_initial_states.csv"
# initial_state_file: "/home/burak/catkin_ws_deformable/src/deformable_manipulations_tent_building/saved_states/mingrui_yu_scene_0_dlo_4_initial_states.csv"
# initial_state_file: "/home/burak/catkin_ws_deformable/src/deformable_manipulations_tent_building/saved_states/mingrui_yu_scene_0_dlo_5_initial_states.csv"

# Scene 2 (TASK 2)
# initial_state_file: "/home/burak/catkin_ws_deformable/src/deformable_manipulations_tent_building/saved_states/mingrui_yu_scene_2_dlo_1_initial_states.csv"
# initial_state_file: "/home/burak/catkin_ws_deformable/src/deformable_manipulations_tent_building/saved_states/mingrui_yu_scene_2_dlo_4_initial_states.csv"
# initial_state_file: "/home/burak/catkin_ws_deformable/src/deformable_manipulations_tent_building/saved_states/mingrui_yu_scene_2_dlo_5_initial_states.csv"

# Scene 6 (TASK 3)
# initial_state_file: "/home/burak/catkin_ws_deformable/src/deformable_manipulations_tent_building/saved_states/mingrui_yu_scene_6_dlo_1_initial_states.csv"
initial_state_file: "/home/burak/catkin_ws_deformable/src/deformable_manipulations_tent_building/saved_states/mingrui_yu_scene_6_dlo_4_initial_states.csv"
# initial_state_file: "/home/burak/catkin_ws_deformable/src/deformable_manipulations_tent_building/saved_states/mingrui_yu_scene_6_dlo_5_initial_states.csv"
## ----------------------------------------------------------------------------------------

## Target State File for the Tent Pole
## ----------------------------------------------------------------------------------------
# The target state file is used to load the target poses of the tent pole
# If not specified, the target poses are expected to manually set using the set_n_save_target_state service
# target_state_file: "" 

# target_state_file: "/home/burak/catkin_ws_deformable/src/deformable_manipulations_tent_building/saved_states/mingrui_yu_scene_1_target_states.csv"
# target_state_file: "/home/burak/catkin_ws_deformable/src/deformable_manipulations_tent_building/saved_states/mingrui_yu_scene_2_target_states.csv"
# target_state_file: "/home/burak/catkin_ws_deformable/src/deformable_manipulations_tent_building/saved_states/mingrui_yu_scene_3_target_states.csv"
# target_state_file: "/home/burak/catkin_ws_deformable/src/deformable_manipulations_tent_building/saved_states/mingrui_yu_scene_4_target_states.csv"

# target_state_file: "/home/burak/catkin_ws_deformable/src/deformable_manipulations_tent_building/saved_states/mingrui_yu_scene_0_dlo_1_target_states.csv"
# target_state_file: "/home/burak/catkin_ws_deformable/src/deformable_manipulations_tent_building/saved_states/mingrui_yu_scene_0_dlo_4_target_states.csv"
# target_state_file: "/home/burak/catkin_ws_deformable/src/deformable_manipulations_tent_building/saved_states/mingrui_yu_scene_0_dlo_5_target_states.csv"

# target_state_file: "/home/burak/catkin_ws_deformable/src/deformable_manipulations_tent_building/saved_states/mingrui_yu_scene_2_dlo_1_target_states.csv"
# target_state_file: "/home/burak/catkin_ws_deformable/src/deformable_manipulations_tent_building/saved_states/mingrui_yu_scene_2_dlo_4_target_states.csv"
# target_state_file: "/home/burak/catkin_ws_deformable/src/deformable_manipulations_tent_building/saved_states/mingrui_yu_scene_2_dlo_5_target_states.csv"

# target_state_file: "/home/burak/catkin_ws_deformable/src/deformable_manipulations_tent_building/saved_states/mingrui_yu_scene_6_dlo_1_target_states.csv"
target_state_file: "/home/burak/catkin_ws_deformable/src/deformable_manipulations_tent_building/saved_states/mingrui_yu_scene_6_dlo_4_target_states.csv"
# target_state_file: "/home/burak/catkin_ws_deformable/src/deformable_manipulations_tent_building/saved_states/mingrui_yu_scene_6_dlo_5_target_states.csv"
## ----------------------------------------------------------------------------------------


# Maximum velocity limits for each robot
# Any velocity command exceeding these limits will be scaled down to these values
max_linear_velocity: 0.2 # 0.05 # 0.2 # 0.1 # [m/s]
max_angular_velocity: 0.3 # 0.075 # 0.3 # 0.15 # [rad/s]

# Maximum acceleration limits for each robot
max_linear_acceleration: 0.01 # 0.5  # [m/s^2]
max_angular_acceleration: 0.2 # 0.5  # [rad/s^2]

# Acceptable error for the target pose to consider the target is reached successfully
# If the average error is less than this value, the target is not considered as reached
acceptable_pos_err_avr_norm: 0.01 # 0.05 # 0.1 # 0.2 # [m] # note: d_obstacle_offset is added to this value ,NOPE it is not added
acceptable_ori_err_avr_norm: 0.05 # 0.01 # 0.1 # [rad] 

# Convergence time limit for the controller
# If the error changes are less than the convergence thresholds in the last "convergence_wait_timeout" seconds,
# the controller is considered to be converged or stuck.
# If set to less than or equal to zero, the controller does not stop.
convergence_wait_timeout: 5.0 # 10.0 # [s]

k_low_pass_convergence: 0.9 # low pass filter coefficient for the ratio of minimum distance values of the previous values (Must be between [0,1])

# Convergence threshold of the controller
# If the average error changes less than this value in the last "convergence_wait_timeout" seconds,
# the controller is considered to be converged or stuck
convergence_threshold_pos: 1e-5 # 1e-7 [m]
convergence_threshold_ori: 1e-2 # [rad]
## ----------------------------------------------------------------------------------------

## ----------------------------------------------------------------------------------------
## Path planning parameters
path_tracking_control_enabled: True # default: True

path_planning_tesseract_enabled: True # default: False # For Tesseract Path planning
path_planning_pre_saved_paths_enabled: True # default: False # For Pre-saved Paths

# Is repanning_allowed. If True, replanning is allowed when the controller is converged withouth success (i.e. got stuck)
replanning_allowed: False # default: True 
# Maximum number of replanning attempts
max_replanning_attempts: 3 # default: 3

# Path tracking controller gains [x,y,z, Rx,Ry,Rz]
# kp_path_tracking: [0.0,0.0,0.0, 0.0,0.0,0.0]
# kp_path_tracking: [1.0,1.0,1.0, 1.5,1.5,1.5]
# kp_path_tracking: [0.5,0.5,0.5, 0.75,0.75,0.75]
# kp_path_tracking: [0.3,0.3,0.3, 0.45,0.45,0.45]
# kp_path_tracking: [0.2,0.2,0.2, 0.3,0.3,0.3]
# kp_path_tracking: [0.2,0.2,0.2, 0.3,0.3,0.3]
kp_path_tracking: [0.1,0.1,0.1, 0.15,0.15,0.15] 
# kp_path_tracking: [0.05,0.05,0.05, 0.075,0.075,0.075]

kd_path_tracking: [0.0,0.0,0.0, 0.0,0.0,0.0]
# kd_path_tracking: [1.0,1.0,1.0, 1.0,1.0,1.0]
# kd_path_tracking: [1.0,1.0,1.0, 1.5,1.5,1.5]
# kd_path_tracking: [0.5,0.5,0.5, 0.5,0.5,0.5]
# kd_path_tracking: [0.25,0.25,0.25, 0.25,0.25,0.25]

# Path tracking switch off parameters used in the transition function
# A piecewise smooth transition function is used to switch off 
# the path tracking controller smoothly to the nominal controller
# when the robot is close to the end of path. 
# See: https://www.desmos.com/calculator/lw1rirjtab
d_path_tracking_start_switch_off_distance: 0.1 # 0.35 # the distance from the end of the path to start switching off the path tracking controller
d_path_tracking_complete_switch_off_distance: 0.01 # the distance from the end of the path to completely switch off the path tracking controller

# Feedforward velocity scale factors for the path tracking controller
# These values are multiplied with the maximum velocity limits to scale down the velocity commands of the path tracking
# They are in the range of [0,1]. If the value is 1.0, the maximum velocity limits are used as the feedforward velocity commands.
path_tracking_feedforward_linear_velocity_scale_factor: 0.6 # 0.5
path_tracking_feedforward_angular_velocity_scale_factor: 0.6 # 0.5
## ----------------------------------------------------------------------------------------

## ------------------------------------------------------------------------------------------------------
## Path planning parameters for the Tesseract Path Planning
# The path planning is done using the Tesseract library
# The path is generated between the target pose and the current pose of the robot

# Tesseract uses the GeneralResourceLocator to find resources on the file system. The GeneralResourceLocator
# uses the TESSERACT_RESOURCE_PATH environmental variable.
tesseract_resource_path: "~/catkin_ws_deformable/src/"

## SPECIFY THE URDF FILE FOR THE TENT POLE
## Explanation: 
## - Tesseract uses a simplified version of the tent pole as a robot model#
## - This robot model is a floating 6 DOF frame controlled with a 3 DOF prismatic joint and a 3 DOF revolute joint
## - Then this frame is attached to the center of the tent pole
## - The tent pole can be simplified as a rigid link or a chain of rigid links that are connected with revolute joints
## - The design of the tent pole is defined in the tesseract tent pole urdf file
## IMPORTANT: AUTOMATIC DLO URDF GENERATION FEATURE
##            If tesseract_tent_pole_urdf is not specified, dlo_urdf_creator is used to create the URDF automatically, 
##            and the number of links are automically determined by initial and target poses of the tent pole dependingon the collision scene.
##            The default maximum number of links is the number of segments in the tent pole simulation
##            however, using more links may cause the path planning to be slower. 
##            Therefore, it may be useful to specify the maximum number of links allowed for the automatic creation.

tesseract_tent_pole_urdf: "" # If not specified, dlo_urdf_creator is used to create the URDF automatically

# tesseract_tent_pole_urdf: "package://deformable_description/urdf/pole_1_links_6DOF/pole_1_links.urdf"

# Maximum number of links allowed for the automatic creation of the URDF
# If not specified, or specified as a non positive number, the number of segments in the tent pole simulation is used.
# If specified number is more than the number of segments in the tent pole simulation, 
# the number of segments in the tent pole simulation is used with a warning.
automatic_tent_pole_max_links: 10 

## SPECIFY THE SRDF FILE FOR THE TENT POLE
## Explanation: 
## - Tesseract also requires an srdf file that supports the planning of the tent pole
## - The srdf file defines the planning groups, the allowed collision matrix, etc.
## IMPORTANT: AUTOMATIC DLO URDF GENERATION FEATURE
##            If dlo_urdf_creator is used to create the URDF automatically, the SRDF file should be specified manually
##            as the generic srdf file specified with the `pole_automatic.srdf` file. 
##            The disable_collisions tags are dynamically handled within the planner

tesseract_tent_pole_srdf: "package://deformable_description/urdf/pole_automatic/pole_automatic.srdf" # generic srdf file for the automatic creation of the URDF. The disable_collisions tags are dynamically handled within the planner.

# tesseract_tent_pole_srdf: "package://deformable_description/urdf/pole_1_links_6DOF/pole_1_links.srdf"

## SPECIFY THE TCP FRAME, MANIPULATOR GROUP AND MANIPULATOR WORKING FRAME 
tesseract_tent_pole_tcp_frame: "tool0" # The name of the tool center point frame in the tent pole urdf file
tesseract_tent_pole_manipulator_group: "manipulator" # The name of the manipulator group in the srdf file
tesseract_tent_pole_manipulator_working_frame: "base_link" # The name of the working frame in the manipulator group in the srdf file

## SPECIFY IF THE DEFAULT TESSERACT VIEWER IS USED
# If True, the default tesseract viewer is also used to visualize the planning scene through http://localhost:8000/
tesseract_use_default_viewer: True # default: False 
## ------------------------------------------------------------------------------------------------------

## ------------------------------------------------------------------------------------------------------
## Parameters for the Experiments with pre-saved paths

# Scene of the experiment, we use Mingrui Yu's scenes (For Simulation "1","2","3","4", For Real Experiments "0","2","6")
experiments_scene_id: "6" 
# Dlo type of the experiment (For simulation assign to None or Comment out, For Real Experiments assign "1", "4", "5")
experiments_dlo_type: "4" 

# experiments_range: The pre-saved experiments has a range, e.g 1-100, in the directory make sure the paths exist given this range
# This can be specigied as list of experiment numbers as well, e.g. [1,2,3,4,5,6,7,8,9,10]
# Note that:
# - If only one value is given or more than two values are given, the range is assumed to be a list of experiments
# - If two values are given, the range is assumed to be a range of experiments, inclusive of both the start and end values
# experiments_range: [1,100]
experiments_range: [101] 

# Given the directory below we assume there exists sub folders with names "scene_<experiments_scene_id>"
# experiments_saved_paths_directory: "~/catkin_ws_deformable/src/deformable_manipulations_tent_building/src/tesseract_planner/generated_plans_i9_10885h"
# experiments_saved_paths_directory: "~/catkin_ws_deformable/src/deformable_manipulations_tent_building/src/tesseract_planner/generated_plans_i9_10885h_10_segments"
experiments_saved_paths_directory: "~/catkin_ws_deformable/src/deformable_manipulations_tent_building/src/tesseract_planner/generated_plans_real_demo" # For Real Experiments

## ------------------------------------------------------------------------------------------------------

## -------------------------------------------------------
## Obstacle avoidance parameters

k_low_pass_min_d: 0.1 # low pass filter coefficient for the ratio of minimum distance values of the previous values (Must be between [0,1])

# offset distance from the obstacles
d_obstacle_offset: 0.002 # 0.004 # 0.05 # (meter) 
# d_obstacle_offset: 0.01 # 0.004 # 0.05 # (meter) 

d_obstacle_freezone: 0.1 # GOOD 0.3 # (meter) # further than this distance, no obstacles considered by the controller 
# d_obstacle_freezone: 0.03 # GOOD 0.3 # (meter) # further than this distance, no obstacles considered by the controller 

# alpha(h) function obstacle avoidance coefficients OLD
# see: https://www.desmos.com/calculator/hc6lc7nzkk for the function visualizations
c1_alpha_obstacle: 0.26 # GOOD 0.26 # GOOD 0.02 # 0.1 # 1.0 # 0.25 # 0.08 # Decrease this to start reacting early 
c2_alpha_obstacle: 1.0   # GOOD 1.0  # GOOD 4.0  # 2.7 # 4.0 # 1.16 # 
c3_alpha_obstacle: 1.0   # GOOD 1.0  # GOOD 0.05 # linear slope if h < 0 # Increase this to remove the offset violation more agressively

# # alpha(h) function obstacle avoidance coefficients NEW
# # see: https://www.desmos.com/calculator/eccc1oqisp for the function visualizations
# c1_alpha_obstacle: 0.1 # [0,1] # Decrease this to start reacting early 
# c2_alpha_obstacle: 1.0   # NOT USED
# c3_alpha_obstacle: 1.0   # GOOD 1.0  # linear slope if h < 0 # Increase this to remove the offset violation more agressively
## -------------------------------------------------------

## -------------------------------------------------------
## Stress avoidance parameters

k_low_pass_ft: 0.9 # low pass filter coefficient for the ratio of ft values of the previous values (Must be between [0,1])

wrench_max: [200.0, 200.0, 200.0, 15.0, 15.0, 15.0] # maximum wrench values for each axis [Fx,Fy,Fz, Tx,Ty,Tz] for the Control Barrier Functions (CBF)s. 
# w_stress_offset: [30.0, 30.0, 30.0, 2.25, 2.25, 2.25] # offset values for the stress violation for each axis [Fx,Fy,Fz, Tx,Ty,Tz]
w_stress_offset: [60.0, 60.0, 60.0, 4.5, 4.5, 4.5] # offset values for the stress violation for each axis [Fx,Fy,Fz, Tx,Ty,Tz]

# alpha(h_ft) function robot stress coefficients for each axis [Fx,Fy,Fz, Tx,Ty,Tz]
# see: https://www.desmos.com/calculator/hc6lc7nzkk for the function visualizations
# c1_alpha_ft: [0.1, 0.1, 0.1, 0.01, 0.01, 0.01] # Decrease this to start reacting early  
c1_alpha_ft: [9, 9, 9, 0.6, 0.6, 0.6] # Decrease this to start reacting early  
# c1_alpha_ft: [150, 150, 150, 20, 20, 20] # Decrease this to start reacting early TOO RELAXED  

c2_alpha_ft: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0] # DO NOT CHANGE FROM 1.0. EXPERIMENTAL

# c3_alpha_ft: [10.0, 10.0, 10.0, 30.0, 30.0, 30.0] # linear slope if h < 0 # Increase this to remove the offset violation more agressively # SEEMS TOO RELAXED FOR Fx,Fy,Fz
c3_alpha_ft: [90.0, 90.0, 90.0, 30.0, 30.0, 30.0] # linear slope if h < 0 # Increase this to remove the offset violation more agressively
# c3_alpha_ft: [150.0, 150.0, 150.0, 30.0, 30.0, 30.0] # linear slope if h < 0 # Increase this to remove the offset violation more agressively
# c3_alpha_ft: [200.0, 200.0, 200.0, 30.0, 30.0, 30.0] # linear slope if h < 0 # Increase this to remove the offset violation more agressively
# c3_alpha_ft: [400.0, 400.0, 400.0, 30.0, 30.0, 30.0] # linear slope if h < 0 # Increase this to remove the offset violation more agressively
# c3_alpha_ft: [70.0, 70.0, 70.0, 90.0, 90.0, 90.0] # SEEMS TOO AGRESSIVE FOR Tx,Ty,Tz
## -------------------------------------------------------
